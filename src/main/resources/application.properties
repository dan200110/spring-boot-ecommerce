spring.application.name=springboot-ecommerce
# logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:6306/springboot-ecommerce
spring.datasource.username=springstudent
spring.datasource.password=springstudent
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# health endpoint
management.endpoint.health.group.custom.include=*
# JWT secret
jwtSecret=secret
jwtExpiration=36000000
## mail sending service
#hostSender=${host-sender}
#spring.mail.host=${spring-mail-host}
#spring.mail.port=${spring-mail-port}
#spring.mail.username=${spring-mail-username}
#spring.mail.password=${spring-mail-password}
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#
## paypal api
#paypal.baseUrl=${paypal-baseUrl}
#paypal.clientId=${paypal-clientId}
#paypal.secret=${paypal-secret}
#
## web securiy config
#web.corsAllowedOrigins = ${cors-allowed-origin}
#
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${jwk-set-uri}
#handle file upload
spring.servlet.multipart.max-file-size=15MB
spring.servlet.multipart.max-request-size=15MB
spring.resources.static-locations=file:uploads/

#AWS file upload
aws.bucket.name=
aws.bucket.region=
aws.accessKey=
aws.secretKey=
aws.cloudfront.distributionId=